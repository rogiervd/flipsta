language: cpp

compiler:
  - gcc
  - clang

env:
  - VARIANT=debug PYTHON_VERSION=2.7
  - VARIANT=release PYTHON_VERSION=2.7
  - VARIANT=debug PYTHON_VERSION=3.2
  - VARIANT=release PYTHON_VERSION=3.2

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -qq
  - wget https://github.com/boostorg/build/raw/develop/src/contrib/boost.jam -O ~/boost.jam
  - echo -e 'import boost ;\nboost.use-project ;\n using gcc ;\n using clang ;\n using python :' ${PYTHON_VERSION} ';' > ~/user-config.jam
  - cat ~/user-config.jam

install:
  # Use GCC 4.8.
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8; fi
  - sudo apt-get install -qq libboost1.48-all-dev python-dev python3-dev
  - if [ "$CXX" = "g++" ]; then
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90;
    fi
  # Make libboost_python-py32 available as libboost_python3.
  # (I believe this is an oversight in the packaging of Boost.Python.)
  - sudo ln -s libboost_python-py32.so /usr/lib/libboost_python3.so
  # Download newer version (>= 1.10) of lcov than Ubuntu 12.04 (1.09) has.
  - if [ "$VARIANT" == "debug" ]; then
      wget -O lcov.tar.gz http://downloads.sourceforge.net/ltp/lcov-1.11.tar.gz;
      mkdir lcov;
      tar -xzf lcov.tar.gz -C ./lcov --strip-components=1;
      cd lcov;
      sudo make install;
      cd ..;
      rm -Rf lcov lcov.tar.gz;
    fi
  - gem install coveralls-lcov

script:
  # For debug builds, compute coverage of tests.
  - if [ "$VARIANT" == "debug" ]; then
      COVERAGE="cxxflags='--coverage' linkflags='--coverage'";
    else
      COVERAGE="";
    fi
  # Define the target to build:
  # if the Python version is not the default, only test the Python interface.
  - if [ "$PYTHON_VERSION" == "2.7" ]; then
      TARGET="test";
    else
      TARGET="flipsta/test//flipsta-python";
    fi
  # It just so happens that ${CC} corresponds to the Boost.Build toolset name.
  - ./test/bjam_in_parent_directory.sh ${TRAVIS_BRANCH} -j2 ${TARGET} toolset=${CC} variant=${VARIANT} ${COVERAGE}

after_success:
  # For debug builds, report coverage on coveralls.io.
  # Run lcov and then coveralls-lcov as per README at
  #   https://github.com/okkez/coveralls-lcov
  - if [ "$VARIANT" == "debug" ] && [ "$PYTHON_VERSION" != "2.7" ]; then
      cd ../flipsta-build;
      mkdir coverage-data/;
      cp `find bin -name '*.gcno'` coverage-data/;
      cp `find bin -name '*.gcda'` coverage-data/;
      mkdir coverage/;
      lcov --compat-libtool --no-external --directory coverage-data --base-directory ./flipsta/ --capture --output-file coverage/coverage.info;
      coveralls-lcov coverage/coverage.info;
    fi
